buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
            changing = true
        }
    }
}

apply plugin: 'forge'
apply plugin: 'maven-publish'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

version = "1.0"
group= "modgroup"
archivesBaseName = "modid"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "run"
}

repositories {
    maven { url = "https://maven.tilera.xyz" }
    maven {
        name = "ic2"
        url = "https://maven.ic2.player.to/"
        metadataSources {
            artifact()
        } 
    }
    maven {
        name 'central'
        url 'https://maven.thorfusion.com/artifactory/central/'
    }
}

dependencies {
    //implementation "codechicken:CodeChickenCore:1.7.10-1.0.7.48:dev"
    //implementation "codechicken:CodeChickenLib:1.7.10-1.1.3.141:dev"
    //implementation "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"
    //implementation "com.eloraam.redpower:redpower:2.0pr10-dirty:deobf"
    implementation "com.github.tox1cozZ:mixin-booter-legacy:1.1.2"
    implementation "dev.tilera:auracore:1.9.0:deobf"
    implementation "net.industrial-craft:industrialcraft-2:2.2.660-experimental:dev"
    implementation "thaumcraft:Thaumcraft:1.7.10-4.2.3.5:deobf"
    implementation "universalelectricity:universalelectricity:5.2.2:deobf"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    filesMatching('mcmod.info') {
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.archivesBaseName

            artifact deobfJar
            artifact sourcesJar
            artifact jar
        }
    }

    repositories {
        if (project.hasProperty('mvnURL')) {
                maven {
                    credentials {
                        username findProperty("mvnUsername")
                        password findProperty("mvnPassword")
                    }
                    url = findProperty("mvnURL")
                }
        }
        else {
                mavenLocal()
        }
    }
}
